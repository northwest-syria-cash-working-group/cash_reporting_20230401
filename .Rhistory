flextable() %>%
set_caption(paste0("448,000 people reached with MPC, USD 13.2 million disbursed, ", report_date)) %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "b",
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria"))
350/ 150
500 / 150
100 / 150
# Think of another way to do this -- if someone else runs this, it won't work
cbr <- read_csv("./data/cbr_com.csv") %>%
mutate(month = month(distribution_date)) %>%
replace_na(list(beneficiaries = 0))
cbr %>%
filter(project_status == "Completed") %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(implementing_partner),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_beneficiaries` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_beneficiaries`) %>%
mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>%
select(governorate, district, communities, partners,
households, beneficiaries, total_usd, `%_beneficiaries`) %>%
flextable() %>%
set_caption(paste0("448,000 people reached with MPC, USD 13.2 million disbursed, ", report_date)) %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "b",
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria"))
cbr %>%
filter(project_status == "Completed") %>%
group_by(implementing_partner) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE),
families = sum(families, na.rm = TRUE)) %>%
mutate(usd_per_fam = round(total_usd / families, digits = 2),
`%_usd_total` = round(total_usd / sum(total_usd) * 100,
digits = 2)) %>%
arrange(desc(total_usd))
cbr %>%
filter(project_status == "Completed") %>%
group_by(implementing_partner) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE),
families = sum(families, na.rm = TRUE)) %>%
mutate(usd_per_fam = round(total_usd / families, digits = 2),
`%_usd_total` = round(total_usd / sum(total_usd) * 100,
digits = 2)) %>%
arrange(desc(total_usd)) %>%
flextable() %>%
set_caption("USD disbursed and families reached by partner") %>%
theme_zebra() %>%
flextable::set_table_properties(layout = "autofit", width = .8)
eq
ggplotly(partner_scatter, tooltip = c("text")) %>%
layout(showlegend = TRUE, legend = list(font = (list(size = 6)))) %>%
plotly::style(hoveron = "point") %>%
layout(title = list(text = paste0("Beneficiaries and communities reached",
"<br>",
"<sup>",
"Cash response implementing partners; mouse over for details","</sup>")))
text-align: center; font-size:120% ;',
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c(wounded_dead_100k, damaged_houses_100k), digits = 2)
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2)
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatNumber(c("total_population"))
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency('A',currency = "", interval = 3, mark = ",")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency("total_popualtion", currency = "", interval = 3, mark = ",")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency("total_population", currency = "", interval = 3, mark = ",")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency("total_population", currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_population"), digits = 0)
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency(c("total_population", "wounded_dead", "damaged_houses"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_population", "wounded_dead", "damaged_houses"), digits = 0)
text-align: center; font-size:120% ;',
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population, wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU, extracted 20230328")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency(c("total_population", "wounded_dead", "damaged_houses"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_population", "wounded_dead", "damaged_houses"), digits = 0)
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
district = admin2name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
left_join(cbr %>%
filter(project_status == "Completed") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)),
by = "admin3pcode") %>%
select(governorate, district, sub_district,
total_population,
beneficiaries, total_usd,
wounded_dead, wounded_dead_100k,
damaged_houses, damaged_houses_100k,
admin3pcode) %>%
datatable(options = list(pageLength = 10, scrollX = TRUE),
filter = list(position = "top", clear = FALSE),
caption = htmltools::tags$caption(style = 'caption-side: top;
text-align: center; font-size:120% ;',
"Reference table -- Earthquake impacts, from ACU, extracted 20230328")) %>%
formatStyle(0, target = "row", lineHeight = "80%", fontSize = "80%") %>%
formatRound(c("wounded_dead_100k", "damaged_houses_100k"), digits = 2) %>%
formatCurrency(c("total_population",
"wounded_dead", "damaged_houses",
"beneficiaries", "total_usd"),
currency = "", interval = 3, mark = ",") %>%
formatRound(c("total_population",
"wounded_dead", "damaged_houses",
"beneficiaries", "total_usd"), digits = 0)
cbr %>%
filter(project_status == "Completed") %>%
group_by(village_camps) %>%
summarise(beneficiaries = sum(beneficiaries
))
cbr %>%
filter(project_status == "Completed") %>%
group_by(village_camps) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
replace_na(list(village_camps = "NA")) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
cbr %>%
filter(project_status == "Completed") %>%
group_by(village_camps) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
replace_na(list(village_camps = "NA")) %>%
mutate(pc_ben = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("Twice as many beneficiaries from villages as from camps") %>%
theme_zebra()
cbr %>%
filter(project_status == "Completed") %>%
group_by(village_camps) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
replace_na(list(village_camps = "NA")) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("More than twice as many beneficiaries from villages as from camps") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed") %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
group_by(governorate, sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = paste0("as of ", report_date),
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, admin3pcode) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
filter(project_status == "Completed") %>%
group_by(sub_district, admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) , by = "admin3pcode",
.groups = "drop") %>%
filter(!is.na(sub_district)) %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
mutate(pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = paste0("as of ", report_date),
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
cbr %>%
filter(project_status == "Completed") %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
group_by(governorate, sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = paste0("as of ", report_date),
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, admin3pcode) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
filter(project_status == "Completed") %>%
group_by(sub_district, admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
.groups = "drop"),
by = "admin3pcode") %>%
filter(!is.na(sub_district)) %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
mutate(pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = paste0("as of ", report_date),
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
cbr %>%
filter(project_status == "Completed") %>%
group_by(source) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("More than twice as many beneficiaries from villages as from camps") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed") %>%
group_by(source) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("More than twice as many beneficiaries from villages as from camps") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed") %>%
group_by(source) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("Still one third of reporting originates from the FSL tracker") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
skimr::skim()
cbr %>% filter(is.na(abbreviation))
cbr %>%
filter(project_status == "Completed") %>%
group_by(month = month(distribution_date)) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("Still, one third of reporting originates from the FSL tracker") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed") %>%
group_by(month = month(distribution_date, label = TRUE)) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("Summary of date reporting") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed") %>%
group_by(month = month(distribution_date, label = TRUE)) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
replace_na(list(month = "NA")) %>%
flextable() %>%
set_caption("January reporting is still largely incomplete") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Completed") %>%
group_by(month = month(distribution_date, label = TRUE)) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("January reporting is still largely incomplete") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>% group_by(project_status) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("January reporting is still largely incomplete") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(project_status == "Planned") %>%
group_by(source) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("12 partners have reported planned activities") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>% group_by(project_status) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("12 partners have reported planned activities") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
filter(cbr, project_status == "Planned") %>% {sum(.$beneficiaries)}
448317 + 62129
510446 / 662942
remove.packages("xfun")
update.packages(checkBuilt =TRUE, ask = FALSE)
