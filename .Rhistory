scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Dead and wounded per 100,000 persons",
x = "Dead and wounded per 100k",
y = "") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(wounded_dead > 0) %>%
mutate(sub_district = fct_reorder(sub_district, wounded_dead)) %>%
ggplot(aes(x = wounded_dead, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(wounded_dead, accuracy = 1)), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Dead and wounded per sub-district",
x = "Number of dead and wounded",
y = "") +
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(wounded_dead > 0) %>%
mutate(sub_district = fct_reorder(sub_district, wounded_dead),
wounded_dead_100k = round(wounded_dead_100k, digits = 2)) %>%
ggplot(aes(x = wounded_dead_100k, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = wounded_dead_100k), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Dead and wounded per 100,000 persons",
x = "Dead and wounded per 100k",
y = "") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("dead_wounded_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(damaged_houses > 0) %>%
mutate(sub_district = fct_reorder(sub_district, damaged_houses)) %>%
ggplot(aes(x = damaged_houses, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(damaged_houses, accuracy = 1)), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Damaged houses per sub-district",
x = "Number of damaged houses",
y = "") +
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(damaged_houses > 0) %>%
mutate(sub_district = fct_reorder(sub_district, damaged_houses),
damaged_houses_100k = round(damaged_houses_100k, digits = 2)) %>%
ggplot(aes(x = damaged_houses_100k, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = damaged_houses_100k), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Damaged houses per 100,000 persons",
x = "Damaged houses per 100k",
y = "") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("damaged_houses_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Completed") %>%
group_by(governorate, district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_reorder(district, beneficiaries),
governorate = fct_relevel(governorate,
c("Idleb", "Aleppo"))) %>%
ggplot(aes(x = beneficiaries, y = district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = "as of 05 April 2023",
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, district = admin2name_en) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
filter(project_status == "Completed") %>%
group_by(district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) ,
by = "district") %>%
mutate(district = fct_relevel(district,
"Al Bab",
"Jarablus",
"A'zaz",
"Jebel Saman",
"Afrin",
"Jisr-Ash-Shugur",
"Idleb",
"Harim"),
pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = "as of 05 April 2023",
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("mpc_by_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Completed") %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
group_by(governorate, sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = "as of 03 April 2023",
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, admin3pcode) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
filter(project_status == "Completed") %>%
group_by(sub_district, admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) , by = "admin3pcode",
.groups = "drop") %>%
filter(!is.na(sub_district)) %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
mutate(pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = "as of 03 April 2023",
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
cbr %>%
filter(project_status == "Completed") %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
group_by(governorate, sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = "as of 05 April 2023",
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, admin3pcode) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
filter(project_status == "Completed") %>%
group_by(sub_district, admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) , by = "admin3pcode",
.groups = "drop") %>%
filter(!is.na(sub_district)) %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
mutate(pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = "as of 05 April 2023",
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("mpc_by_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
mutate(distribution_date = as.Date(distribution_date)) %>%
filter(project_status == "Completed") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-09" |
distribution_date == "2023-03-02" |
# distribution_date == "2023-03-22" |
distribution_date == "2023-03-30",
cum_ben, ""),
cum_label = as.numeric(cum_label)) %>%
ggplot(aes(x = distribution_date, y = cum_ben)) +
geom_line(colour = "blue") +
geom_text(aes(label = scales::comma(cum_label)), vjust = -.6,
size = 4) +
scale_x_date(date_breaks = "1 week", date_labels = "%d-%b") +
# Why didn't you learn this before?
scale_y_continuous(labels = comma, expand = expansion(mult = .1)) +
labs(x = "Distribution date",
y = "Cumulative beneficiaries",
title = "MPC progress by date, Earthquake Response",
subtitle = "The earliest distribution was 2023-02-09")
ggsave("./img/progress_line.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Completed") %>%
group_by(governorate, district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_reorder(district, beneficiaries),
governorate = fct_relevel(governorate,
c("Idleb", "Aleppo"))) %>%
ggplot(aes(x = beneficiaries, y = district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = "as of 05 April 2023",
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, district = admin2name_en) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
filter(project_status == "Completed") %>%
group_by(district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) ,
by = "district") %>%
mutate(district = fct_relevel(district,
"Al Bab",
"Jarablus",
"A'zaz",
"Jebel Saman",
"Afrin",
"Jisr-Ash-Shugur",
"Idleb",
"Harim"),
pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = "as of 05 April 2023",
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("./img/mpc_by_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Completed") %>%
group_by(governorate, district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(district = fct_reorder(district, beneficiaries),
governorate = fct_relevel(governorate,
c("Idleb", "Aleppo"))) %>%
ggplot(aes(x = beneficiaries, y = district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = "as of 05 April 2023",
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, district = admin2name_en) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
filter(project_status == "Completed") %>%
group_by(district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) ,
by = "district") %>%
mutate(district = fct_relevel(district,
"Al Bab",
"Jarablus",
"A'zaz",
"Jebel Saman",
"Afrin",
"Jisr-Ash-Shugur",
"Idleb",
"Harim"),
pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = "as of 05 April 2023",
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("./img/mpc_by_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Completed") %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
group_by(governorate, sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
ungroup() %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
ggplot(aes(x = beneficiaries, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(beneficiaries)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "MPC beneficiaries by district",
subtitle = "as of 05 April 2023",
y = "") +
scale_x_continuous(labels = comma) +
hno %>%
filter(admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate = admin1name_en, admin3pcode) %>%
summarise(total_population = sum(total_population, na.rm = TRUE),
.groups = "drop") %>%
left_join(
cbr %>%
mutate(sub_district = recode(sub_district,
"salqin" = "Salqin",
"afrin" = "Afrin")) %>%
filter(project_status == "Completed") %>%
group_by(sub_district, admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) , by = "admin3pcode",
.groups = "drop") %>%
filter(!is.na(sub_district)) %>%
mutate(sub_district = fct_reorder(sub_district, beneficiaries)) %>%
mutate(pc_reached = round(beneficiaries / total_population * 100, digits = 1)) %>%
ggplot(aes(x = pc_reached, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(pc_reached)),
hjust = "inward") +
scale_fill_viridis_d(begin = .3) +
labs(title = "Percent of population reached",
subtitle = "as of 05 April 2023",
y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("./img/mpc_by_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Planned") %>%
filter(governorate == "Aleppo") %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "#41b6c4") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = comma) +
labs(title = "Planned beneficiaries -- Aleppo",
x = "Planned beneficiaries",
y = "") +
cbr %>%
filter(project_status == "Planned") %>%
filter(governorate == "Idleb" & !is.na(admin3pcode)) %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "lightgoldenrod") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Idleb",
x = "Planned beneficiaries",
y = "")  +
plot_layout(widths = c(4, 1))
ggsave("./img/planned_by_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(wounded_dead > 0) %>%
mutate(sub_district = fct_reorder(sub_district, wounded_dead)) %>%
ggplot(aes(x = wounded_dead, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(wounded_dead, accuracy = 1)), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Dead and wounded per sub-district",
x = "Number of dead and wounded",
y = "") +
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(wounded_dead > 0) %>%
mutate(sub_district = fct_reorder(sub_district, wounded_dead),
wounded_dead_100k = round(wounded_dead_100k, digits = 2)) %>%
ggplot(aes(x = wounded_dead_100k, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = wounded_dead_100k), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Dead and wounded per 100,000 persons",
x = "Dead and wounded per 100k",
y = "") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("./img/dead_wounded_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(damaged_houses > 0) %>%
mutate(sub_district = fct_reorder(sub_district, damaged_houses)) %>%
ggplot(aes(x = damaged_houses, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = comma(damaged_houses, accuracy = 1)), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Damaged houses per sub-district",
x = "Number of damaged houses",
y = "") +
eq %>%
left_join(locations %>% distinct(admin3pcode,
sub_district = admin3name_en,
governorate = admin1name_en),
by = "admin3pcode") %>%
filter(damaged_houses > 0) %>%
mutate(sub_district = fct_reorder(sub_district, damaged_houses),
damaged_houses_100k = round(damaged_houses_100k, digits = 2)) %>%
ggplot(aes(x = damaged_houses_100k, y = sub_district)) +
geom_col(aes(fill = governorate)) +
geom_text(aes(label = damaged_houses_100k), hjust = "inward") +
scale_fill_viridis_d(option = "plasma", begin = 0.2, end = .8) +
scale_x_continuous(labels = comma) +
labs(title = "Damaged houses per 100,000 persons",
x = "Damaged houses per 100k",
y = "") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
ggsave("./img/damaged_houses_sub_district.png", dpi = 300, height = 8.27, width = 11.69, units = "in")
cbr %>%
filter(project_status == "Completed") %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(implementing_partner),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries, na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_beneficiaries` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_beneficiaries`) %>%
mutate(`%_beneficiaries` = ifelse(`%_beneficiaries` > 99.98, 100, `%_beneficiaries`)) %>%
select(governorate, district, communities, partners,
households, beneficiaries, total_usd, `%_beneficiaries`) %>%
flextable() %>%
set_caption("364,000 people reached with MPC, USD 10.5 million disbursed, 05 April 2023") %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "b",
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria"))
